{
    "bubblesort": {
        "description": "Bubble Sort is a simple sorting algorithm that repeatedly steps through the list, compares adjacent elements and swaps them if they are in the wrong order.",
        "link": "https://www.programiz.com/dsa/bubble-sort"
    },
    "quicksort": {
        "description": "Quicksort is a divide-and-conquer algorithm that works by selecting a 'pivot' element from the array and partitioning the other elements into two sub-arrays.",
        "link": "https://www.programiz.com/dsa/selection-sort"
    },
    "mergesort": {
        "description": "Merge Sort is an efficient, stable, comparison-based, divide and conquer sorting algorithm.",
        "link": "https://www.programiz.com/dsa/insertion-sort"
    },
    "insertionsort": {
        "description": "Insertion Sort is a simple sorting algorithm that builds the final sorted array one item at a time.",
        "link": "https://www.programiz.com/dsa/insertion-sort"
    },
    "selectionsort": {
        "description": "Selection Sort is a simple and efficient sorting algorithm that divides the input list into two parts: the sublist of items already sorted and the sublist of items remaining to be sorted.",
        "link": "https://www.programiz.com/dsa/selection-sort"
    },
    "heapsort": {
        "description": "Heap Sort is a comparison-based sorting technique based on Binary Heap data structure.",
        "link": "https://www.programiz.com/dsa/heap-sort"
    },
    "radixsort": {
        "description": "Radix Sort is a non-comparative sorting algorithm that sorts numbers by processing individual digits.",
        "link": "https://www.programiz.com/dsa/radix-sort"
    },
    "countingsort": {
        "description": "Counting Sort is a sorting technique based on keys between a specific range.",
        "link": "https://www.programiz.com/dsa/counting-sort"
    }
}
